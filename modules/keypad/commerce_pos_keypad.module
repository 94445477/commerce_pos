<?php

/**
 * @file
 * The Commerce POS Keypad module file.
 */

/**
 * Implements hook_theme().
 */
function commerce_pos_keypad_theme($existing, $type, $theme, $path) {
  return [
    'commerce_pos_keypad_keypad' => [
      'variables' => [
        'input_type' => 'text',
      ],
    ],
  ];
}

/**
 * Implements hook_element_info_alter().
 */
function commerce_pos_keypad_element_info_alter(&$info) {
  $form_elements = ['textfield', 'password'];

  foreach ($form_elements as $element) {
    $info[$element]['#pre_render'][] = 'commerce_pos_keypad_pre_render';
  }
}

/**
 * Attach JS and CSS to elements as needed.
 */
function commerce_pos_keypad_pre_render($element) {
  // Only preprocess items with #commerce_pos_keypad set.
  if (!empty($element['#commerce_pos_keypad'])) {
    $element['#attached']['library'][] = 'commerce_pos_keypad/keypad';
    $element['#attributes']['class'][] = 'commerce-pos-keypad-keypad';

    $element = commerce_pos_keypad_pre_render_keypad($element);
  }

  return $element;
}

/**
 * Alter a form element to add a keypad to it.
 *
 * @param array $element
 *   The form element to alter.
 *
 * @return array
 *   The altered element.
 */
function commerce_pos_keypad_pre_render_keypad(array $element) {
  // Get the themed html for the input box.
  $input_box['input_box'] = [
    '#theme' => 'commerce_pos_keypad_keypad',
    '#input_type' => ($element['#type'] == 'password') ? 'password' : 'text',
  ];
  $input_box = render($input_box);

  $js['commerce_pos_keypad']['commerce_pos_keypad']['commercePosKeypadKeypad'] = [
    'inputBox' => $input_box,
  ];

  if (isset($element['#commerce_pos_keypad']['type']) && $element['#commerce_pos_keypad']['type'] == "icon") {
    $js['commerce_pos_keypad']['commerce_pos_keypad']['commercePosKeypadIcon'] = TRUE;
  }

  // If events were declared, add them to the settings.
  if (isset($element['#commerce_pos_keypad']['events'])) {
    foreach ($element['#commerce_pos_keypad']['events'] as $selector => $events) {
      foreach ($events as $event_name => $event_properties) {
        $js['commerce_pos_keypad']['commerce_pos_keypad']['commercePosKeypadKeypad']['events'][] = [
          'selector' => $selector,
          'name' => $event_name,
          'properties' => $event_properties,
        ];
      }
    }
  }
  else {
    // Add default "blur" event.
    $js['commerce_pos_keypad']['commerce_pos_keypad']['commercePosKeypadKeypad']['events'][] = [
      'name' => 'blur',
      'properties' => [],
    ];
  }

  $element['#attached']['drupalSettings'] = $js;

  $element['#attributes']['class'][] = 'commerce-pos-keypad-keypad';

  return $element;
}
